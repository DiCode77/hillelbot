ПЛАН НА ЗАНЯТТЯ

- Засетапити (налаштувати) нашу робочу середу
- Зробити щось типу хеллоу ворлда, але для бота.

ЩО МИ БУДЕМО ВИКОРИСТОВУВАТИ:
- CMake - наша білд система
- vcpkg - менеджер пакетів
    - Бібліотека nlohmann/json - для парсингу JSON файлів, тому що комунікування по REST API (з серверами в інтернеті) йде через формат тексту JSON.
    - Бібліотека cpr - високорівнева бібліотека для відправлення нетворк запитів і отримання результату.
- С++ як мова розробки
- git як система контролю версій

Для швидкого доступу до готового скелету, який вже використовує vcpkg та пару бібліотек, звертайтесь сюди: https://github.com/Oleksii-Kshenskyi/skeletons/tree/main/cpp_simple_cmake_vcpkg

git log --oneline --decorate --graph --all -n
^^^ git команда для того, щоб подивись на останні n комітів

Бот буде зберігатися та розвиватися у Гітхабі за цією URL: 
https://github.com/Oleksii-Kshenskyi/hillelbot

Для того, щоб зклонувати собі репозиторій з ботом і працювати у себе локально (наприклад для домашки), треба виконати цю гіт команду:
`git clone https://github.com/Oleksii-Kshenskyi/hillelbot.git`


ПЕРШІ КРОКИ У РОЗРОБЦІ

1. Організувати перший мінімальний CMake проект, який просто компілює Hello World.
2. Підключити vcpkg + наші дві ліби, і написати більш продвинуту версію Hello World яка буде тестувати, чи все ми вірно підключили.
3. Відправити елементарний GET запит на якийсь сервер та отримати відповідь.
4. Починаємо розбиратися з API телеграму.

API (Application Program Interface) = Rest API = це публічний інтерфейс будь-якого HTTP серверу, який дає вам можливість при коректному звертанні до цього інтерфейсу виконувати якусь потрібну функціональність на цьому сервері.


CMake команди для генерації білд файлів:
- На Віндовс:  cmake .. -G "Visual Studio 17 2022"
- На Мак або Лінукс: cmake .. -G "Unix Makefiles"


make, ninja, MSBuild (це система яка компілить проекти Віжуал Студії) - білд-системи. Їх задача - знайти сценарій (скрипт), по якому білдити ваш поточний проект, і збілдити його вірно, враховуючи всі залежності, змінні енву і так далі. Це робиться у самому кінці.

CMake - не є білд системою у тому ж сенсі що і попередні три. Коректна назва для CMake - генератор білд файлів. У нього теж є свій сценарій (у файлах CMakeLists.txt), але по цих сценаріях він не білдить проект самостійно, а генерує білдфайли якоїсь існуючої білд системи, яка потім буде власне білдити проект.

vcpkg - кросплатформений менеджер пакетів для С++.
Менеджер пакетів (приклади: scoop, homebrew, ..., pacman, apt-get).
Пакет = третєстороння бібліотека.
Третєстороння бібліотека - якийсь код, написаний іншими людьми, який вже запакований у якусь бібліотеку, яку можна просто скачати, збілдити та використовувати у своєму власному коді для того, щоб не "ізобрєтать вєлосіпєд".

Якщо до традиційного клонування 'git clone <URL>' додати флажок --recurse-submodules, ми зможемо зтягнути разом і наш репозиторій, і всі гітові залежності (сабмодулі) разом з ним. У нашому випадку єдина гітова залежність це менеджер пакетів vcpkg.

Як працювати з vcpkg
1. Бутстрапніть (ініціалізуйте) vcpkg за допомогою команди 'vcpkg/bootstrap-vcpkg'

vcpkg/vcpkg.exe integrate install - потрібно тільки якщо ви працюєте у Вінді під Віжуал Студією.
